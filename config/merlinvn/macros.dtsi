
/ {
  macro {
    ZMK_MACRO(qu_macro,
      wait-ms = <30>;
      tap-ms = <40>;
      bindings = <&kp Q &kp U>;
    )
    ZMK_MACRO(ng_macro,
      wait-ms = <30>;
    tap-ms = <40>;
    bindings = <&kp N &kp G>;
    )
    ZMK_MACRO(gh_macro,
      wait-ms = <30>;
    tap-ms = <40>;
    bindings = <&kp G &kp H>;
    )
    ZMK_MACRO(nh_macro,
      wait-ms = <30>;
    tap-ms = <40>;
    bindings = <&kp N &kp H>;
    )
    ZMK_MACRO(ngh_macro,
      wait-ms = <30>;
    tap-ms = <40>;
    bindings = <&kp N &kp G &kp H>;
    )
    ZMK_MACRO(th_macro,
      wait-ms = <30>;
    tap-ms = <40>;
    bindings = <&kp T &kp H>;
    )
    ZMK_MACRO(tr_macro,
      wait-ms = <30>;
    tap-ms = <40>;
    bindings = <&kp T &kp R>;
    )
    ZMK_MACRO(ph_macro,
      wait-ms = <30>;
    tap-ms = <40>;
    bindings = <&kp P &kp H>;
    )
    ZMK_MACRO(ch_macro,
      wait-ms = <30>;
    tap-ms = <40>;
    bindings = <&kp C &kp H>;
    )
    ZMK_MACRO(uow_macro,
      wait-ms = <30>;
    tap-ms = <40>;
    bindings = <&kp U &kp O &kp W>;
    )
    ZMK_MACRO(uoo_macro,
      wait-ms = <30>;
    tap-ms = <40>;
    bindings = <&kp U &kp O &kp O>;
    )
    ZMK_MACRO(iee_macro,
      wait-ms = <30>;
    tap-ms = <40>;
    bindings = <&kp I &kp E &kp E>;
    )
    ZMK_MACRO(yee_macro,
      wait-ms = <30>;
    tap-ms = <40>;
    bindings = <&kp Y &kp E &kp E>;
    )
    ZMK_MACRO(owi_macro,
      wait-ms = <30>;
    tap-ms = <40>;
    bindings = <&kp O &kp W &kp I>;
    )
    ZMK_MACRO(ooi_macro,
      wait-ms = <30>;
    tap-ms = <40>;
    bindings = <&kp O &kp O &kp I>;
    )
  };
};
